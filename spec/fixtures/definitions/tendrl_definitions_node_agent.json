{"action":"get","node":{"key":"/tendrl_definitions_node_agent/data","value":"---\nnamespace.tendrl.node_agent:\n  objects:\n    Cpu:\n      attrs:\n        architecture:\n          type: String\n        cores_per_socket:\n          type: String\n        cpu_count:\n          type: String\n        cpu_family:\n          type: String\n        cpu_op_mode:\n          type: String\n        model:\n          type: String\n        model_name:\n          type: String\n        vendor_id:\n          type: String\n      enabled: true\n      value: nodes/$Node_context.node_id/Cpu\n    Memory:\n      attrs:\n        total_size:\n          type: String\n        total_swap:\n          type: String\n      enabled: true\n      value: nodes/$Node_context.node_id/Memory\n    Node:\n      atoms:\n        cmd:\n          enabled: true\n          inputs:\n            mandatory:\n              - Node.cmd_str\n          name: \"Execute CMD on Node\"\n          run: tendrl.node_agent.atoms.node.cmd.Cmd\n          type: Create\n          uuid: dc8fff3a-34d9-4786-9282-55eff6abb6c3\n        check_node_up:\n          enabled: true\n          inputs:\n            mandatory:\n              - Node.fqdn\n          outputs:\n            - Node.status\n          name: \"check whether the node is up\"\n          run: tendrl.node_agent.atoms.node.check_node_up\n          type: Create\n          uuid: eda0b13a-7362-48d5-b5ca-4b6d6533a5ab\n      attrs:\n        cmd_str:\n          type: String\n        fqdn:\n          type: String\n        status:\n          type: Boolean\n      enabled: true\n      value: nodes/$Node_context.node_id/Node\n    OS:\n      attrs:\n        kernel_version:\n          type: String\n        os:\n          type: String\n        os_varsion:\n          type: String\n        selinux_mode:\n          type: String\n      enabled: true\n      value: nodes/$Node_context.node_id/Os\n    Package:\n      atoms:\n        install:\n          enabled: true\n          inputs:\n            mandatory:\n              - Package.name\n              - Package.pkg_type\n            optional:\n              - Package.version\n          name: \"Install Package\"\n          post_run:\n            - tendrl.node_agent.atoms.package.validations.check_package_installed\n          run: tendrl.node_agent.atoms.package.install.Install\n          type: Create\n          uuid: 16abcfd0-aca9-4022-aa0f-5de1c5a742c7\n      attrs:\n        name:\n          help: \"Location of the rpm/deb/pypi package\"\n          type: String\n        pkg_type:\n          help: \"Type of package can be rpm/deb/pip/\"\n        state:\n          help: \"State can installed|uninstalled\"\n        version:\n          help: \"Version of the rpm/deb/pypi package\"\n          type: String\n      enabled: true\n    Process:\n      atoms:\n        start:\n          enabled: true\n          inputs:\n            mandatory:\n              - Service.config_path\n              - Service.config_data\n          name: \"Configure Service\"\n          post_run:\n            - tendrl.node_agent.atoms.service.validations.check_service_running\n          run: tendrl.node_agent.atoms.service.configure.Configure\n          type: Update\n          uuid: b90a0d97-8c9f-4ab1-8f64-dbb5638159a3\n      attrs:\n        name:\n          help: \"Name of the service\"\n          type: String\n        state:\n          help: \"Service state can be started|stopped|restarted|reloaded\"\n          type: String\n      enabled: true\n    Service:\n      atoms:\n        configure:\n          enabled: true\n          inputs:\n            mandatory:\n              - Service.config_path\n              - Service.config_data\n          name: \"Configure Service\"\n          post_run:\n            - tendrl.node_agent.atoms.service.validations.check_service_running\n          run: tendrl.node_agent.atoms.service.configure.Configure\n          type: Update\n          uuid: b90a0d97-8c9f-4ab1-8f64-dbb5638159a3\n      attrs:\n        config_data:\n          help: \"Configuration data for the service\"\n          type: String\n        config_path:\n          help: \"configuration file path for the service eg:/etc/tendrl/tendrl.conf\"\n          type: String\n        name:\n          help: \"Name of the service\"\n          type: String\n        state:\n          help: \"Service state can be started|stopped|restarted|reloaded\"\n          type: String\n      enabled: true\n    Tendrl_context:\n      enabled: True\n      attrs:\n        cluster_id:\n          help: \"Tendrl managed/generated cluster id for the sds being managed by Tendrl\"\n          type: String\n        sds_name:\n          help: \"Name of the Tendrl managed sds, eg: 'gluster'\"\n          type: String\n        sds_version:\n          help: \"Version of the Tendrl managed sds, eg: '3.2.1'\"\n          type: String\n        node_id:\n          help: \"Tendrl ID for the managed node\"\n          type: String\n      value: nodes/$Node_context.node_id/Tendrl_context\n    Node_context:\n      attrs:\n        machine_id:\n          help: \"Unique /etc/machine-id\"\n          type: String\n        fqdn:\n          help: \"FQDN of the Tendrl managed node\"\n          type: String\n        node_id:\n          help: \"Tendrl ID for the managed node\"\n          type: String\n      enabled: true\n      value: nodes/$Node_context.node_id/Node_context\nnamespace.tendrl.node_agent.gluster_integration:\n  flows:\n    ImportCluster:\n      atoms:\n        - tendrl.node_agent.objects.Package.atoms.install\n        - tendrl.node_agent.gluster_integration.objects.Config.atoms.generate\n        - tendrl.node_agent.objects.File.atoms.write\n        - tendrl.node_agent.objects.Node.atoms.cmd\n      description: \"Import existing Gluster Cluster\"\n      enabled: true\n      inputs:\n        mandatory:\n          - \"Node[]\"\n          - Tendrl_context.sds_name\n          - Tendrl_context.sds_version\n          - Tendrl_context.cluster_id\n      post_run:\n        - tendrl.node_agent.gluster_integration.objects.Tendrl_context.atoms.check_cluster_id_exists\n      pre_run:\n        - tendrl.node_agent.objects.Node.atoms.check_node_up\n        - tendrl.node_agent.objects.Tendrl_context.atoms.compare\n      run: tendrl.node_agent.gluster_integration.flows.import_cluster.ImportCluster\n      type: Create\n      uuid: 2f94a48a-05d7-408c-b400-e27827f4edef\n      version: 1\n  objects:\n    Config:\n      atoms:\n        generate:\n          enabled: true\n          inputs:\n            mandatory:\n              - Config.etcd_port\n              - Config.etcd_connection\n          name: \"Generate Gluster Integration configuration based on provided inputs\"\n          outputs:\n            - Config.data\n            - Config.file_path\n          run: tendrl.node_agent.gluster_integration.objects.Config.atoms.generate.Generate\n          uuid: 807a1ead-bd70-4f55-99d0-dbd9d76d2a10\n      attrs:\n        data:\n          help: \"Configuration data of Gluster Integration for this Tendrl deployment\"\n          type: String\n        etcd_connection:\n          help: \"Host/IP of the etcd central store for this Tendrl deployment\"\n          type: String\n        etcd_port:\n          help: \"Port of the etcd central store for this Tendrl deployment\"\n          type: String\n        file_path:\n          default: /etc/tendrl/gluster_integration.conf\n          help: \"Path to the Gluster integration tendrl configuration\"\n          type: String\n      enabled: true\n\nnamespace.tendrl.node_agent.ceph_integration:\n  flows:\n    ImportCluster:\n      atoms:\n        - tendrl.node_agent.objects.Package.atoms.install\n        - tendrl.node_agent.ceph_integration.objects.Config.atoms.generate\n        - tendrl.node_agent.objects.File.atoms.write\n        - tendrl.node_agent.objects.Node.atoms.cmd\n      description: \"Import existing Ceph Cluster\"\n      enabled: true\n      inputs:\n        mandatory:\n          - \"Node[]\"\n          - Tendrl_context.sds_name\n          - Tendrl_context.sds_version\n          - Tendrl_context.cluster_id\n      post_run:\n        - tendrl.node_agent.ceph_integration.objects.Tendrl_context.atoms.check_cluster_id_exists\n      pre_run:\n        - tendrl.node_agent.objects.Node.atoms.check_node_up\n        - tendrl.node_agent.objects.Tendrl_context.atoms.compare\n      run: tendrl.node_agent.ceph_integration.flows.import_cluster.ImportCluster\n      type: Create\n      uuid: 5a48d43b-a163-496c-b01d-9c600ea0a5db\n      version: 1\n  objects:\n    Config:\n      atoms:\n        generate:\n          enabled: true\n          inputs:\n            mandatory:\n              - Config.etcd_port\n              - Config.etcd_connection\n          name: \"Generate Ceph Integration configuration based on provided inputs\"\n          outputs:\n            - Config.data\n            - Config.file_path\n          run: tendrl.node_agent.ceph_integration.objects.Config.atoms.generate.Generate\n          uuid: 61959242-628f-4847-a5e2-2c8d8daac0cd\n      attrs:\n        data:\n          help: \"Configuration data of Ceph Integration for this Tendrl deployment\"\n          type: String\n        etcd_connection:\n          help: \"Host/IP of the etcd central store for this Tendrl deployment\"\n          type: String\n        etcd_port:\n          help: \"Port of the etcd central store for this Tendrl deployment\"\n          type: String\n        file_path:\n          default: /etc/tendrl/ceph_integration.conf\n          help: \"Path to the Ceph integration tendrl configuration\"\n          type: String\n      enabled: true\n\ntendrl_schema_version: 0.3\n","modifiedIndex":54113561,"createdIndex":54113561}}
